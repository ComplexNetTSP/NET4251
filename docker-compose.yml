version: "3"
services:
  web:
    build: web
    ports:
      - "8000-8002:5000"
    networks:
      - frontend
      - backend
    environment:
      MONGO_URL: "mongodb://root:securedpassword@mongo:27017"
      FLASK_DEBUG: "true"
    volumes:
      - ./web:/code
    deploy:
      mode: replicated
      replicas: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`web.localhost`) && PathPrefix(`/`)"

  webnodb:
      build: webnodb
      ports:
        - "8003:5000"
      networks:
        - frontend
        - backend

  mongo:
    image: mongo
    container_name: mongo
    hostname: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "securedpassword"
    networks:
      - backend
    ports:
      - "27017:27017"
  
  mongoexpress:
    image: mongo-express
    ports:
      - "8081:8081"
    networks:
      - backend
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "root"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "securedpassword"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH_USERNAME: "root"
      ME_CONFIG_BASICAUTH_PASSWORD: "securedpassword"
    
  traefik:
    image: traefik
    container_name: traefik
    hostname: traefik
    ports: 
      - "8080:8080"
      - "80:80"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend: 
    driver: bridge
  #database:
  #  build: db

